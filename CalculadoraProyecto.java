/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package calculadorafinal;
import java.util.Stack;
/**
 *
 * @author CarlosE,JerónimoT
 */
/**
 * Clase principal para la calculadora gráfica.
 * Permite realizar operaciones aritméticas básicas.
 */
public class CalculadoraProyecto extends javax.swing.JFrame {

    /**
     * Creates new form CalculadoraProyecto
     */
/**
 * Constructor de la clase CalculadoraProyecto.
 * Inicializa los componentes de la interfaz gráfica.
 */
    public CalculadoraProyecto() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
/**
 * Inicializa los componentes de la interfaz gráfica.
 * Este método es generado automáticamente por el entorno de desarrollo.
 */
    private void initComponents() {

        cero = new javax.swing.JButton();
        puntodecim = new javax.swing.JButton();
        uno = new javax.swing.JButton();
        dos = new javax.swing.JButton();
        tres = new javax.swing.JButton();
        cuatro = new javax.swing.JButton();
        cinco = new javax.swing.JButton();
        seis = new javax.swing.JButton();
        siete = new javax.swing.JButton();
        ocho = new javax.swing.JButton();
        nueve = new javax.swing.JButton();
        multi = new javax.swing.JButton();
        suma = new javax.swing.JButton();
        division = new javax.swing.JButton();
        resta = new javax.swing.JButton();
        igual = new javax.swing.JButton();
        parenIzq = new javax.swing.JButton();
        parenDer = new javax.swing.JButton();
        delTexto = new javax.swing.JButton();
        Pantalla = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        AC = new javax.swing.JButton();
        pot2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setForeground(java.awt.Color.black);

        cero.setBackground(new java.awt.Color(0, 0, 0));
        cero.setFont(new java.awt.Font("Monotype Corsiva", 3, 20)); // NOI18N
        cero.setForeground(new java.awt.Color(255, 255, 255));
        cero.setText("0");
        cero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ceroActionPerformed(evt);
            }
        });

        puntodecim.setBackground(new java.awt.Color(0, 0, 0));
        puntodecim.setFont(new java.awt.Font("Monotype Corsiva", 3, 20)); // NOI18N
        puntodecim.setForeground(new java.awt.Color(255, 255, 255));
        puntodecim.setText(".");
        puntodecim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                puntodecimActionPerformed(evt);
            }
        });

        uno.setBackground(new java.awt.Color(0, 0, 0));
        uno.setFont(new java.awt.Font("Monotype Corsiva", 3, 20)); // NOI18N
        uno.setForeground(new java.awt.Color(255, 255, 255));
        uno.setText("1");
        uno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unoActionPerformed(evt);
            }
        });

        dos.setBackground(new java.awt.Color(0, 0, 0));
        dos.setFont(new java.awt.Font("Monotype Corsiva", 3, 20)); // NOI18N
        dos.setForeground(new java.awt.Color(255, 255, 255));
        dos.setText("2");
        dos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dosActionPerformed(evt);
            }
        });

        tres.setBackground(new java.awt.Color(0, 0, 0));
        tres.setFont(new java.awt.Font("Monotype Corsiva", 3, 20)); // NOI18N
        tres.setForeground(new java.awt.Color(255, 255, 255));
        tres.setText("3");
        tres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tresActionPerformed(evt);
            }
        });

        cuatro.setBackground(new java.awt.Color(0, 0, 0));
        cuatro.setFont(new java.awt.Font("Monotype Corsiva", 3, 20)); // NOI18N
        cuatro.setForeground(new java.awt.Color(255, 255, 255));
        cuatro.setText("4");
        cuatro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cuatroActionPerformed(evt);
            }
        });

        cinco.setBackground(new java.awt.Color(0, 0, 0));
        cinco.setFont(new java.awt.Font("Monotype Corsiva", 3, 20)); // NOI18N
        cinco.setForeground(new java.awt.Color(255, 255, 255));
        cinco.setText("5");
        cinco.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentMoved(java.awt.event.ComponentEvent evt) {
                cincoComponentMoved(evt);
            }
        });
        cinco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cincoActionPerformed(evt);
            }
        });

        seis.setBackground(new java.awt.Color(0, 0, 0));
        seis.setFont(new java.awt.Font("Monotype Corsiva", 3, 20)); // NOI18N
        seis.setForeground(new java.awt.Color(255, 255, 255));
        seis.setText("6");
        seis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seisActionPerformed(evt);
            }
        });

        siete.setBackground(new java.awt.Color(0, 0, 0));
        siete.setFont(new java.awt.Font("Monotype Corsiva", 3, 20)); // NOI18N
        siete.setForeground(new java.awt.Color(255, 255, 255));
        siete.setText("7");
        siete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sieteActionPerformed(evt);
            }
        });

        ocho.setBackground(new java.awt.Color(0, 0, 0));
        ocho.setFont(new java.awt.Font("Monotype Corsiva", 3, 20)); // NOI18N
        ocho.setForeground(new java.awt.Color(255, 255, 255));
        ocho.setText("8");
        ocho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ochoActionPerformed(evt);
            }
        });

        nueve.setBackground(new java.awt.Color(0, 0, 0));
        nueve.setFont(new java.awt.Font("Monotype Corsiva", 3, 20)); // NOI18N
        nueve.setForeground(new java.awt.Color(255, 255, 255));
        nueve.setText("9");
        nueve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nueveActionPerformed(evt);
            }
        });

        multi.setBackground(new java.awt.Color(204, 204, 255));
        multi.setFont(new java.awt.Font("Monotype Corsiva", 3, 20)); // NOI18N
        multi.setText("*");
        multi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multiActionPerformed(evt);
            }
        });

        suma.setBackground(new java.awt.Color(204, 204, 255));
        suma.setFont(new java.awt.Font("Monotype Corsiva", 3, 20)); // NOI18N
        suma.setText("+");
        suma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sumaActionPerformed(evt);
            }
        });

        division.setBackground(new java.awt.Color(204, 204, 255));
        division.setFont(new java.awt.Font("Monotype Corsiva", 3, 20)); // NOI18N
        division.setText("/");
        division.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                divisionActionPerformed(evt);
            }
        });

        resta.setBackground(new java.awt.Color(204, 204, 255));
        resta.setFont(new java.awt.Font("Monotype Corsiva", 3, 20)); // NOI18N
        resta.setText("-");
        resta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                restaActionPerformed(evt);
            }
        });

        igual.setBackground(new java.awt.Color(255, 204, 204));
        igual.setText("=");
        igual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                igualActionPerformed(evt);
            }
        });

        parenIzq.setBackground(new java.awt.Color(204, 204, 255));
        parenIzq.setFont(new java.awt.Font("Monotype Corsiva", 3, 20)); // NOI18N
        parenIzq.setText("(");
        parenIzq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parenIzqActionPerformed(evt);
            }
        });

        parenDer.setBackground(new java.awt.Color(204, 204, 255));
        parenDer.setFont(new java.awt.Font("Monotype Corsiva", 3, 20)); // NOI18N
        parenDer.setText(")");
        parenDer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parenDerActionPerformed(evt);
            }
        });

        delTexto.setBackground(new java.awt.Color(153, 153, 255));
        delTexto.setFont(new java.awt.Font("Monotype Corsiva", 3, 12)); // NOI18N
        delTexto.setForeground(new java.awt.Color(255, 255, 255));
        delTexto.setText("DEL");
        delTexto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delTextoActionPerformed(evt);
            }
        });

        Pantalla.setBackground(new java.awt.Color(0, 0, 0));
        Pantalla.setFont(new java.awt.Font("Monotype Corsiva", 0, 48)); // NOI18N
        Pantalla.setForeground(new java.awt.Color(255, 255, 255));
        Pantalla.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        Pantalla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PantallaActionPerformed(evt);
            }
        });

        jScrollPane1.setBackground(new java.awt.Color(0, 0, 0));

        AC.setBackground(new java.awt.Color(153, 153, 255));
        AC.setFont(new java.awt.Font("Monotype Corsiva", 3, 18)); // NOI18N
        AC.setForeground(new java.awt.Color(255, 255, 255));
        AC.setText("AC");
        AC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ACActionPerformed(evt);
            }
        });

        pot2.setBackground(new java.awt.Color(204, 204, 255));
        pot2.setFont(new java.awt.Font("Monotype Corsiva", 3, 20)); // NOI18N
        pot2.setText("^");
        pot2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pot2ActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setFont(new java.awt.Font("Rockwell Condensed", 2, 14)); // NOI18N
        jLabel1.setText("Los Estructuradores de Datos, all rights reserved  ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(uno, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cuatro, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(siete, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cero, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(dos, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cinco, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ocho, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(puntodecim, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(seis, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tres, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(nueve, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(5, 5, 5)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(AC, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(pot2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(12, 12, 12)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(multi, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(division, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(parenIzq, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(12, 12, 12)
                                                .addComponent(parenDer, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(delTexto, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(suma, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(resta, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                                .addComponent(igual, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(jLabel1)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addComponent(jScrollPane1)
                    .addComponent(Pantalla, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Pantalla, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(siete, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ocho, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nueve, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pot2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(parenIzq, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(parenDer))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(cuatro, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cinco, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(seis, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(AC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(division, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                                .addComponent(multi, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(uno, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dos, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tres, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(delTexto, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(suma, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(resta, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(igual, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(1, 1, 1)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cero, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(puntodecim, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Validar la expresión
/**
 * Verifica si la expresión ingresada es válida.
 * @param expresion La expresión en formato infijo.
 * @return true si la expresión es válida, de lo contrario false.
 */
    private boolean validarExpresion(String expresion) {
        int balance = 0;
        char prevChar = ' ';
        for (int i = 0; i < expresion.length(); i++) {
            char ch = expresion.charAt(i);
            if (ch == '(') balance++;
            if (ch == ')') balance--;
            if (balance < 0) return false;  // Paréntesis no balanceados
            
            // Verificar que no haya operadores consecutivos
            if ("+-*/^".indexOf(ch) != -1 && "+-*/^".indexOf(prevChar) != -1) {
                return false;
            }
            prevChar = ch;
        }
        return balance == 0;
    }

    // Convertir de infija a postfija (notación polaca inversa)
    public String convertirAPostfija(String expresion) {
        StringBuilder resultado = new StringBuilder();
        Stack<Character> pila = new Stack<>();

        for (int i = 0; i < expresion.length(); i++) {
            char c = expresion.charAt(i);

            if (c == '(') {
                pila.push(c);
                
            }
            
            // Si es un paréntesis derecho, sacamos de la pila hasta encontrar un paréntesis izquierdo
            else if (c == ')') {
                while (!pila.isEmpty() && pila.peek() != '(') {
                    resultado.append(" ");
                    resultado.append(pila.pop());
                    
                }
                pila.pop();
                
            }
            // Si es un operador
            else if ("+-*/^".indexOf(c) != -1) {
                
                while (!pila.isEmpty() && precedencia(pila.peek()) >= precedencia(c)) {
                    resultado.append(pila.pop());
                    resultado.append(" ");
                }
                pila.push(c);
                
            }
            // Si es un número o espacio, lo añadimos al resultado
            else{
                resultado.append(c);
                
            }
        }
        pila.push(' ');

        // Vaciar la pila
        while (!pila.isEmpty()) {
            resultado.append(pila.pop());
        }
        

        return resultado.toString();
    }
    private int precedencia(char operador) {
        switch (operador) {
            case '+':
            case '-':
                return 1;
            case '*':
            case '/':
            case '^':
                return 2;
            default:
                return -1;
        }
    }

    // Evaluar expresión en notación postfija
/**
 * Evalúa una expresión en notación postfija.
 * @return El resultado de la evaluación de la expresión.
 */
    public double evaluarPostfija(String expresion) {
        Stack<Double> pila = new Stack<>();
        StringBuilder numero = new StringBuilder();
        double res=0;
        double num=0;

        for (int i = 0; i < expresion.length(); i++) {
            char c = expresion.charAt(i);

            // Si es un número, lo metemos en la pila
            if (Character.isDigit(c)||c=='.') {
                numero.append(c);
            }
            // Si es un operador, sacamos dos números de la pila y aplicamos la operación
            else {
                
                switch(c){
                 case '+':
                    res = pila.pop() + pila.pop();
                    pila.push(res);
                    break;
                case '-':
                    double n1 = pila.pop(), n2 = pila.pop();
                    res = n2 - n1;
                    pila.push(res);
                    break;
                case '*':
                    res = pila.pop() * pila.pop();
                    pila.push(res);
                    break;
                case '/':
                    double d1 = pila.pop() , d2 = pila.pop();
                    res =  d2/d1 ;
                    pila.push(res);
                    break;
                case '^':
                    double v1 = pila.pop() , v2 = pila.pop();
                    res =  Math.pow(v2, v1) ;
                    pila.push(res);
                    break;
                default:
                    if(!numero.isEmpty()){
                        num = Double.parseDouble(numero.toString());
                        pila.push(num);
                        numero.setLength(0);
                    }
                    break;
                }
            }
        }

        return res;
    }
    
/**
 * Maneja el evento del botón .
 * @param evt El evento que dispara la acción.
 */
    private void puntodecimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_puntodecimActionPerformed
        // TODO add your handling code here:
        Pantalla.setText(Pantalla.getText()+".");
    }//GEN-LAST:event_puntodecimActionPerformed

/**
 * Maneja el evento del botón .
 * @param evt El evento que dispara la acción.
 */
    private void tresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tresActionPerformed
        // TODO add your handling code here:
        Pantalla.setText(Pantalla.getText()+"3");
    }//GEN-LAST:event_tresActionPerformed

/**
 * Maneja el evento del botón .
 * @param evt El evento que dispara la acción.
 */
    private void restaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restaActionPerformed
        // TODO add your handling code here:
        Pantalla.setText(Pantalla.getText()+" - ");
    }//GEN-LAST:event_restaActionPerformed

/**
 * Maneja el evento del botón .
 * @param evt El evento que dispara la acción.
 */
    private void ceroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ceroActionPerformed
        // TODO add your handling code here:
        Pantalla.setText(Pantalla.getText()+"0");
    }//GEN-LAST:event_ceroActionPerformed

/**
 * Maneja el evento del botón .
 * @param evt El evento que dispara la acción.
 */
    private void ochoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ochoActionPerformed
        // TODO add your handling code here:
        Pantalla.setText(Pantalla.getText()+"8");
    }//GEN-LAST:event_ochoActionPerformed

/**
 * Maneja el evento del botón .
 * @param evt El evento que dispara la acción.
 */
    private void nueveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nueveActionPerformed
        // TODO add your handling code here:
        Pantalla.setText(Pantalla.getText()+"9");
    }//GEN-LAST:event_nueveActionPerformed

/**
 * Maneja el evento del botón .
 * @param evt El evento que dispara la acción.
 */
    private void parenDerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_parenDerActionPerformed
        // TODO add your handling code here:
        Pantalla.setText(Pantalla.getText()+")");
    }//GEN-LAST:event_parenDerActionPerformed

/**
 * Maneja el evento del botón .
 * @param evt El evento que dispara la acción.
 */
    private void PantallaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PantallaActionPerformed
        // TODO add your handling code here:
        Pantalla.setText(Pantalla.getText()+" - ");
    }//GEN-LAST:event_PantallaActionPerformed

/**
 * Maneja el evento del botón .
 * @param evt El evento que dispara la acción.
 */
    private void unoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unoActionPerformed
        // TODO add your handling code here:
        Pantalla.setText(Pantalla.getText()+"1");
    }//GEN-LAST:event_unoActionPerformed

/**
 * Maneja el evento del botón .
 * @param evt El evento que dispara la acción.
 */
    private void dosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dosActionPerformed
        // TODO add your handling code here:
        Pantalla.setText(Pantalla.getText()+"2");
    }//GEN-LAST:event_dosActionPerformed

/**
 * Maneja el evento del botón .
 * @param evt El evento que dispara la acción.
 */
    private void cuatroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cuatroActionPerformed
        // TODO add your handling code here:
        Pantalla.setText(Pantalla.getText()+"4");
    }//GEN-LAST:event_cuatroActionPerformed

/**
 * Maneja el evento del botón .
 * @param evt El evento que dispara la acción.
 */
    private void cincoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cincoActionPerformed
        // TODO add your handling code here:
        Pantalla.setText(Pantalla.getText()+"5");
    }//GEN-LAST:event_cincoActionPerformed

/**
 * Maneja el evento del botón .
 * @param evt El evento que dispara la acción.
 */
    private void seisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seisActionPerformed
        // TODO add your handling code here:
        Pantalla.setText(Pantalla.getText()+"6");
    }//GEN-LAST:event_seisActionPerformed

/**
 * Maneja el evento del botón .
 * @param evt El evento que dispara la acción.
 */
    private void sieteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sieteActionPerformed
        // TODO add your handling code here:
        Pantalla.setText(Pantalla.getText()+"7");
    }//GEN-LAST:event_sieteActionPerformed

/**
 * Maneja el evento del botón .
 * @param evt El evento que dispara la acción.
 */
    private void multiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multiActionPerformed
        // TODO add your handling code here:
        Pantalla.setText(Pantalla.getText()+" * ");
    }//GEN-LAST:event_multiActionPerformed

/**
 * Maneja el evento del botón .
 * @param evt El evento que dispara la acción.
 */
    private void sumaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sumaActionPerformed
        // TODO add your handling code here:
        Pantalla.setText(Pantalla.getText()+" + ");
    }//GEN-LAST:event_sumaActionPerformed

/**
 * Maneja el evento del botón .
 * @param evt El evento que dispara la acción.
 */
    private void divisionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_divisionActionPerformed
        // TODO add your handling code here:
        Pantalla.setText(Pantalla.getText()+" / ");
    }//GEN-LAST:event_divisionActionPerformed

/**
 * Maneja el evento del botón .
 * @param evt El evento que dispara la acción.
 */
    private void igualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_igualActionPerformed
        // TODO add your handling code here:
        String expresion = Pantalla.getText();
        
        if (validarExpresion(expresion)) {
            String postfija = convertirAPostfija(expresion);
            double resultado = evaluarPostfija(postfija);
            Pantalla.setText(String.valueOf(resultado));
        } else {
            Pantalla.setText("SYNTAX ERROR");
        }
    }//GEN-LAST:event_igualActionPerformed

/**
 * Maneja el evento del botón .
 * @param evt El evento que dispara la acción.
 */
    private void parenIzqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_parenIzqActionPerformed
        // TODO add your handling code here:
        Pantalla.setText(Pantalla.getText()+"(");
    }//GEN-LAST:event_parenIzqActionPerformed

/**
 * Maneja el evento del botón .
 * @param evt El evento que dispara la acción.
 */
    private void delTextoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delTextoActionPerformed
        // TODO add your handling code here:
        String resp="",t=Pantalla.getText();
        int i,l = t.length();
        char[] arr = t.toCharArray();
        
        for(i=0; i<l-1; i++)
            
            resp=resp+arr[i];  
        Pantalla.setText(resp);

    }//GEN-LAST:event_delTextoActionPerformed

/**
 * Maneja el evento del botón .
 * @param evt El evento que dispara la acción.
 */
    private void ACActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ACActionPerformed
        // TODO add your handling code here:
        Pantalla.setText("");
    }//GEN-LAST:event_ACActionPerformed

/**
 * Maneja el evento del botón .
 * @param evt El evento que dispara la acción.
 */
    private void pot2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pot2ActionPerformed
        // TODO add your handling code here:
        Pantalla.setText(Pantalla.getText()+" ^ ");
    }//GEN-LAST:event_pot2ActionPerformed

    private void cincoComponentMoved(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_cincoComponentMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_cincoComponentMoved

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CalculadoraProyecto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CalculadoraProyecto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CalculadoraProyecto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CalculadoraProyecto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CalculadoraProyecto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AC;
    private javax.swing.JTextField Pantalla;
    private javax.swing.JButton cero;
    private javax.swing.JButton cinco;
    private javax.swing.JButton cuatro;
    private javax.swing.JButton delTexto;
    private javax.swing.JButton division;
    private javax.swing.JButton dos;
    private javax.swing.JButton igual;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton multi;
    private javax.swing.JButton nueve;
    private javax.swing.JButton ocho;
    private javax.swing.JButton parenDer;
    private javax.swing.JButton parenIzq;
    private javax.swing.JButton pot2;
    private javax.swing.JButton puntodecim;
    private javax.swing.JButton resta;
    private javax.swing.JButton seis;
    private javax.swing.JButton siete;
    private javax.swing.JButton suma;
    private javax.swing.JButton tres;
    private javax.swing.JButton uno;
    // End of variables declaration//GEN-END:variables
}